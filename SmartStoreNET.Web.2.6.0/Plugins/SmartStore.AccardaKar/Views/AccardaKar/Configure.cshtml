@using SmartStore.Web.Framework;
@using SmartStore.Web.Framework.UI;
@using SmartStore.AccardaKar.Models;
@model ConfigurationModel
@{
    Layout = "";
	Html.AddCssFileParts(true, Url.Content("~/Plugins/SmartStore.AccardaKar/Content/smartstore.accardakar.css"));
	Html.AddScriptParts(true, Url.Content("~/Plugins/SmartStore.AccardaKar/Scripts/smartstore.accardakar.js"));
}

<div class="plugin-configuration">
	<div>
		<div class="alert alert-info">
			<button class="close" data-dismiss="alert">×</button>
			@Html.Raw(@T("Plugins.SmartStore.AccardaKar.AdminInstruction"))
		</div>
	</div>
	<div>
		<a href="http://www.accarda.com/" target="_blank">
			<img src="@Url.Content("~/Plugins/SmartStore.AccardaKar/Content/branding.png")" alt="Accarda" class="config-logo" />
		</a>
	</div>
</div>

@Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })

@using (Html.BeginForm())
{
	<input type="hidden" name="systemName" id="systemName" value="@Model.SystemName" />
	
	<table id="AccardaKarConfigTable" class="adminContent">
	<tr>
		<td colspan="2">
			<div class="admin-config-group">
				<div class="title">
					@Model.ConfigGroups.SafeGet(0)
				</div>
			</div>
		</td>
	</tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.UseSandbox)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.UseSandbox)
            @Html.ValidationMessageFor(model => model.UseSandbox)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ApiUrlTest)
        </td>
        <td class="adminData">
            @Html.TextBoxFor(model => model.ApiUrlTest, new { @class = "input-large" })
            @Html.ValidationMessageFor(model => model.ApiUrlTest)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ApiUrlProduction)
        </td>
        <td class="adminData">
            @Html.TextBoxFor(model => model.ApiUrlProduction, new { @class = "input-large" })
            @Html.ValidationMessageFor(model => model.ApiUrlProduction)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.WebshopId)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.WebshopId)
            @Html.ValidationMessageFor(model => model.WebshopId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ApiUsername)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.ApiUsername)
            @Html.ValidationMessageFor(model => model.ApiUsername)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ApiPassword)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.ApiPassword)
            @Html.ValidationMessageFor(model => model.ApiPassword)
        </td>
    </tr>

	<tr class="adminSeparator">
		<td colspan="2">
			<div class="admin-config-group">
				<div class="title">
					@Model.ConfigGroups.SafeGet(1)
				</div>
			</div>
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.AddOrderNotes)
		</td>
		<td class="adminData">
			@Html.SettingEditorFor(model => model.AddOrderNotes)
			@Html.ValidationMessageFor(model => model.AddOrderNotes)
		</td>
	</tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.TransactionType)
        </td>
        <td class="adminData">
			@Html.SettingOverrideCheckbox(model => model.TransactionType)
			@Html.DropDownListFor(model => model.TransactionType, Model.TransactionTypes)
            @Html.ValidationMessageFor(model => model.TransactionType)
        </td>
    </tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.DefaultQuantityUnit)
		</td>
		<td class="adminData">
			@Html.SettingEditorFor(model => model.DefaultQuantityUnit)
			@Html.ValidationMessageFor(model => model.DefaultQuantityUnit)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.TransmitItemDetails)
		</td>
		<td class="adminData">
			@Html.SettingEditorFor(model => model.TransmitItemDetails)
			@Html.ValidationMessageFor(model => model.TransmitItemDetails)
		</td>
	</tr>
	<tr class="accarda-item-details">
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.TransmitItemDetailsDiscount)
		</td>
		<td class="adminData">
			@Html.SettingEditorFor(model => model.TransmitItemDetailsDiscount)
			@Html.ValidationMessageFor(model => model.TransmitItemDetailsDiscount)
		</td>
	</tr>
	<tr class="adminSeparator">
		<td colspan="2">
			<div class="admin-config-group">
				<div class="title">
					@Model.ConfigGroups.SafeGet(4)
				</div>
			</div>
		</td>
	</tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.CreditForKarFees)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.CreditForKarFees)
            @Html.ValidationMessageFor(model => model.CreditForKarFees)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.InvoiceAddDays)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.InvoiceAddDays)
            @Html.ValidationMessageFor(model => model.InvoiceAddDays)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.EnablePhysicalInvoice)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.EnablePhysicalInvoice)
            @Html.ValidationMessageFor(model => model.EnablePhysicalInvoice)
        </td>
    </tr>
    <tr class="accarda-physical-invoice">
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.PhysicalInvoiceFee)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.PhysicalInvoiceFee)
            @Html.ValidationMessageFor(model => model.PhysicalInvoiceFee)
        </td>
    </tr>
    <tr class="accarda-physical-invoice">
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.PhysicalInvoiceFeePercentage)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.PhysicalInvoiceFeePercentage)
            @Html.ValidationMessageFor(model => model.PhysicalInvoiceFeePercentage)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.AdditionalFee)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.AdditionalFee)
            @Html.ValidationMessageFor(model => model.AdditionalFee)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.AdditionalFeePercentage)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.AdditionalFeePercentage)
            @Html.ValidationMessageFor(model => model.AdditionalFeePercentage)
        </td>
    </tr>
	<tr class="adminSeparator">
		<td colspan="2">
			<div class="admin-config-group">
				<div class="title">
					@Model.ConfigGroups.SafeGet(3)
				</div>
			</div>
		</td>
	</tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.EnableBusinessCustomer)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.EnableBusinessCustomer)
            @Html.ValidationMessageFor(model => model.EnableBusinessCustomer)
        </td>
    </tr>

    <tr>
        <td class="adminTitle">&nbsp;</td>
        <td class="adminData">
            <button type="submit" name="save" class="btn btn-primary" value="save">
                <i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")
            </button>
        </td>
    </tr>
	</table>
}

<script type="text/javascript">
	jQuery(document).ready(function () {
		accardakar.init();
	});
</script>