@using SmartStore.NewsImporter;
@using SmartStore.NewsImporter.Core;
@using SmartStore.NewsImporter.Models;
@using SmartStore.Web.Framework;
@using Telerik.Web.Mvc.UI;
@model NewsImporterConfigurationModel
@{
	Layout = "";

	Html.AddCssFileParts(true, "~/css/fileupload", Url.Content("~/Plugins/SmartStore.NewsImporter/Content/smartStore.newsimporter.css"));
	
	Html.AddScriptParts(true, Url.Content("~/Plugins/SmartStore.NewsImporter/Scripts/smartStore.newsimporter.js"));
}

@Html.ValidationSummary(false)

@if (Model.LicensingHint.HasValue())
{
	<div class="alert alert-warning">
		<button class="close" data-dismiss="alert">×</button>
		@Html.Raw(Model.LicensingHint)
	</div>
}

<script type="text/javascript">
	function onRowDataBound_NewsFeed(e) {
		if (!e.dataItem.IsActive) {
			$(e.row).find('td').wrapInner('<span class="muted" />');
		}
	}
</script>

<div id="FeedGridContainer">
	@(Html.Telerik().Grid<FeedImportModel>()
		.Name("news-feed-grid")
		.DataKeys(keys => keys.Add(x => x.Id)
		.RouteKey("Id"))
		.Columns(c =>
		{
			c.Bound(x => x.IsActive)
				.Centered()
				.ClientTemplate(@Html.SymbolForBool("IsActive"));
			c.Bound(x => x.Url)
				.Width(280)
				.ClientTemplate("<a href='<#= Url #>' target='_blank'><#= Url #></a>");
			c.Bound(x => x.Filter)
				.Centered()
				.ClientTemplate(@Html.SymbolForBool("Filter"));
			c.Bound(x => x.FilterValues);
			c.Bound(x => x.LimitedToStores)
				.Centered()
				.ClientTemplate(@Html.SymbolForBool("LimitedToStores"));
			c.Bound(x => x.NumberOfImports)
				.Centered();
			c.Bound(x => x.NumberOfImportedNews)
				.Centered()
				.ReadOnly();
			c.Bound(x => x.NumberOfFailures)
				.Centered();
			c.Bound(x => x.LastImport)
				.ReadOnly();
			c.Template(x => @Html.GridButtons())
				.ClientTemplate(@Html.GridButtons())
				.Width(380);
		})
		.DataBinding(dataBinding =>
		{
			dataBinding.Ajax()
				.Select("FeedQuery", "NewsImporter", new { area = NewsImporterCore.SystemName });
		})
		.ToolBar(commands =>
		{
			commands.Custom()
				.Name("feed-insert-button")
				.HtmlAttributes(new { @class = "btn btn-link feed-grid-toolbar-button feed-insert" })
				.Text("<i class='fa fa-plus'></i>&nbsp;" + @T("Plugins.SmartStore.NewsImporter.AddFeed"));

			commands.Custom()
				.Name("feed-import-all-button")
				.HtmlAttributes(new
				{
					@class = "btn btn-primary pull-right feed-grid-toolbar-button feed-import-all" + (Model.ShowImportAllButton ? "" : " hide"),
					href = @Url.Action("FeedImport", "NewsImporter", new { area = NewsImporterCore.SystemName, id = 0 }),
					onclick = "return confirm('" + T("Admin.Common.AskToProceed") + "')"
				})
				.Text("<i class='fa fa-gears'></i>&nbsp;" + @T("Plugins.SmartStore.NewsImporter.ImportAll"));
		})
		.Pageable(settings => settings.PageSize(Model.GridPageSize).Position(GridPagerPosition.Both))
		.ClientEvents(events => events.OnRowDataBound("onRowDataBound_NewsFeed"))
		.EnableCustomBinding(true)
	)
</div>

<p>&nbsp;</p>

@using (Html.BeginForm())
{
	<table id="NewsImporterSettingTable" class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(m => m.TaskEnabled)
			</td>
			<td class="adminData">
				@Html.EditorFor(m => m.TaskEnabled)
				@Html.ValidationMessageFor(m => m.TaskEnabled)
			</td>
		</tr>
		<tr class="news-task">
			<td class="adminTitle">
				@Html.SmartLabelFor(m => m.TaskExecuteEachMinutes)
			</td>
			<td class="adminData">
				@Html.EditorFor(m => m.TaskExecuteEachMinutes)
				@Html.ValidationMessageFor(m => m.TaskExecuteEachMinutes)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(m => m.UpdateNews)
			</td>
			<td class="adminData">
				@Html.EditorFor(m => m.UpdateNews)
				@Html.ValidationMessageFor(m => m.UpdateNews)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(m => m.DeleteOldNews)
			</td>
			<td class="adminData">
				@Html.EditorFor(m => m.DeleteOldNews)
				@Html.ValidationMessageFor(m => m.DeleteOldNews)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(m => m.OldestNewsDays)
			</td>
			<td class="adminData">
				@Html.EditorFor(m => m.OldestNewsDays)
				@Html.ValidationMessageFor(m => m.OldestNewsDays)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">&nbsp;</td>
			<td class="adminData">
				<button type="submit" name="save" value="save" class="btn btn-primary">
					<i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")
				</button>
			</td>
		</tr>
	</table>
}

<div id="insert-feed-dialog" class="modal modal-large hide fade" tabindex="-1">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal"><b>x</b></button>
		<h4 class="caption">@T("Plugins.SmartStore.NewsImporter.AddFeed")</h4>
	</div>
	<div class="modal-body">

		<form id="FeedUpsertForm" method="POST" action="@Url.Action("FeedInsert", "NewsImporter", new { area = NewsImporterCore.SystemName })">
			<input type="hidden" id="Id" name="Id" value="0" />
			<table class="adminContent">
				<tr>
					<td class="adminTitle">
						@Html.SmartLabelFor(model => model.Url)
					</td>
					<td class="adminData">
						@Html.EditorFor(model => model.Url)
					</td>
				</tr>
			</table>
		</form>

	</div>
	<div class="modal-footer">
		<button class="btn btn-primary" onclick="$('#FeedUpsertForm').submit();"><span>@T("Common.OK")</span></button>
		<button class="btn" data-dismiss="modal">@T("Common.Cancel")</button>
	</div>
</div>

<script type="text/javascript">
	jQuery(document).ready(function () {
		newsImporter.init();
	});
</script>
