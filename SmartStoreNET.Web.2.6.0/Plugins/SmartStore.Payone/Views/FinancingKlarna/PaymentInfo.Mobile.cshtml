@using SmartStore.Web.Framework;
@using SmartStore.Payone.Models;
@model FinancingKlarnaPaymentInfoModel
@{
    Layout = "";
}

<div>
	@Html.LabelFor(model => model.Gender)
	<div data-role="fieldcontain">
		<fieldset data-role="controlgroup" data-type="horizontal" data-mini="true">
			<input type="radio" name="Gender" id="Gender_1" value="m" checked="@(Model.Gender == "m")" />
			<label for="Gender_1">@T("Account.Fields.Gender.Male")</label>

			<input type="radio" name="Gender" id="Gender_2" value="f" checked="@(Model.Gender == "f")" />
			<label for="Gender_2">@T("Account.Fields.Gender.Female")</label>
		</fieldset>
	</div>

	@Html.SmartLabelFor(model => model.DateOfBirthYear, false)
	<div data-role="fieldcontain">
		<fieldset data-role="controlgroup" data-type="horizontal" data-mini="true">
			@Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
		Html.FieldNameFor(x => x.DateOfBirthMonth),
		Html.FieldNameFor(x => x.DateOfBirthYear),
		DateTime.Now.Year - 100,
		DateTime.Now.Year,
		Model.DateOfBirthDay,
		Model.DateOfBirthMonth,
		Model.DateOfBirthYear)
		</fieldset>
	</div>

	@Html.SmartLabelFor(model => model.PhoneNumber, false)
	@Html.TextBoxFor(model => model.PhoneNumber, new { autocomplete = "off" })

	@if (Model.PersonalIdRequired)
	{
		Html.SmartLabelFor(model => model.PersonalId, false);
		Html.TextBoxFor(model => model.PersonalId, new { autocomplete = "off" });
	}

	<label>
		<input type="checkbox" id="ConfirmDataTransmit" name="ConfirmDataTransmit" />
		@Html.Raw(T("Plugins.SmartStore.Payone.FinancingKlarna.ConfirmDataTransmit"))
	</label>
</div>

@Html.Partial("ScriptingPaymentInfo", Model)