@using SmartStore.Web.Framework;
@using SmartStore.Payone.Models;
@model FinancingKlarnaPaymentInfoModel
@{
	Layout = "";
}

<div id="PayoneKlarnaContainer" class="form-horizontal">
	<div class="pull-right">
		<img src="@Url.Content("~/Plugins/SmartStore.Payone/Content/images/klarna.png")" style="max-width: 120px;" />
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.Gender, new { @class = "control-label required" })
		<div class="controls form-inline">
			<label class="inline radio">
				@Html.RadioButton("Gender", "m", (Model.Gender == "m"))
				@T("Account.Fields.Gender.Male")
			</label>
			<label class="inline radio">
				@Html.RadioButton("Gender", "f", (Model.Gender == "f"))
				@T("Account.Fields.Gender.Female")
			</label>
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.DateOfBirthYear, new { @class = "control-label required" })
		<div class="controls">
			@Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
				Html.FieldNameFor(x => x.DateOfBirthMonth),
				Html.FieldNameFor(x => x.DateOfBirthYear),
				DateTime.Now.Year - 100,
				DateTime.Now.Year,
				Model.DateOfBirthDay,
				Model.DateOfBirthMonth,
				Model.DateOfBirthYear)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label required" })
		<div class="controls">
			@Html.EditorFor(model => model.PhoneNumber)
		</div>
	</div>
	@if (Model.PersonalIdRequired)
	{
		<div class="control-group">
			@Html.LabelFor(model => model.PersonalId, new { @class = "control-label required" })
			<div class="controls">
				@Html.EditorFor(model => model.PersonalId)
			</div>
		</div>
	}
	<div class="control-group">
		<div class="controls">
			<label class="checkbox">
				@Html.EditorFor(model => model.ConfirmDataTransmit)
				@Html.Raw(T("Plugins.SmartStore.Payone.FinancingKlarna.ConfirmDataTransmit"))
			</label>
		</div>
	</div>
</div>

@Html.Partial("ScriptingPaymentInfo", Model)