@model PdfProductModel
@using SmartStore.PdfExport.Models;
@{
	Layout = "~/Views/Shared/_Print.cshtml";

	string resSku = T("Admin.Catalog.Products.Fields.Sku");
	string resPrice = T("Admin.Catalog.Products.Fields.Price");
	string resManufacturers = T("Admin.Catalog.Manufacturers");
	string resWeight = T("Admin.Catalog.Products.Fields.Weight");
	string resLength = T("Admin.Catalog.Products.Fields.Length");
	string resWidth = T("Admin.Catalog.Products.Fields.Width");
	string resHeight = T("Admin.Catalog.Products.Fields.Height");
	string resSpecAttributes = T("Plugins.Data.PdfExport.SpecificationAttributes");
	string resAssociatedProducts = T("Plugins.Data.PdfExport.AssociatedProducts");
}
@foreach (dynamic product in Model.Products)
{
	string pictureUrl = product._MainPictureRelativeUrl;
	string sku = product.Sku;
	string formattedPrice = product._FormattedPrice;
	string allManufacturerNames = product._AllManufacturerNames;
	string formattedWeight = product._FormattedWeight;
	string formattedLength = product._FormattedLength;
	string formattedWidth = product._FormattedWidth;
	string formattedHeight = product._FormattedHeight;
	string bundleTitleText = product.BundleTitleText;
	List<dynamic> specAttributes = product.ProductSpecificationAttributes;
	List<BundleItemInfo> bundleItems = product._BundleItemInfos;
	List<GroupedProductInfo> groupedProducts = product._GroupedProductInfos;

    <div class="document">
        @Html.Widget("pdfcatalog_productdetail_top")

        <h1>@((string)product.Name)</h1>
        <p>@((string)product.ShortDescription)</p>

        <div>
            <table>
			@if (sku.HasValue())
			{ 
				<tr>
					<td class="attr-caption" style="width: 25%;">@(resSku):</td>
					<td>@sku</td>
				</tr>
			}
			@if (formattedPrice.HasValue())
			{
				<tr>
					<td class="attr-caption" style="width: 25%;">@(resPrice):</td>
					<td>@formattedPrice</td>
				</tr>
			}
			@if (allManufacturerNames.HasValue())
			{
				<tr>
					<td class="attr-caption" style="width: 25%;">@(resManufacturers):</td>
					<td>@allManufacturerNames</td>
				</tr>
			}
			@if (formattedWeight.HasValue())
			{
				<tr>
					<td class="attr-caption" style="width: 25%;">@(resWeight):</td>
					<td>@formattedWeight</td>
				</tr>
			}
			@if (formattedLength.HasValue())
			{
				<tr>
					<td class="attr-caption" style="width: 25%;">@(resLength):</td>
					<td>@formattedLength</td>
				</tr>
			}
			@if (formattedWidth.HasValue())
			{
				<tr>
					<td class="attr-caption" style="width: 25%;">@(resWidth):</td>
					<td>@formattedWidth</td>
				</tr>
			}
			@if (formattedHeight.HasValue())
			{
				<tr>
					<td class="attr-caption" style="width: 25%;">@(resHeight):</td>
					<td>@formattedHeight</td>
				</tr>
			}
            </table>
        </div>

        @if (pictureUrl.HasValue())
        {
            <div class="text-center margin-top-50 detail-picture">
                <img src="@pictureUrl" />
            </div>
        }
            
        @Html.Widget("pdfcatalog_productdetail_fulldescription_before")

        <p>
            @Html.Raw((string)product.FullDescription)
        </p>

        @Html.Widget("pdfcatalog_productdetail_picture_before")
            
        @if(specAttributes.Count > 0)
        {
            @Html.Widget("pdfcatalog_productdetail_specificationattributes_before")
                
            <h3>@resSpecAttributes</h3>
            <table class="margin-top-30 table">
                @foreach (var specAttribute in specAttributes)
                {
                    <tr>
                        <td class="attr-caption" style="width: 25%;">
                            @((string)specAttribute.SpecificationAttributeOption.SpecificationAttribute.Name):
                        </td>
                        <td>
                            @((string)specAttribute.SpecificationAttributeOption.Name)
                        </td>
                    </tr>
                }
            </table>    
        }
            
        @if(bundleItems != null && bundleItems.Count > 0)
        {
            @Html.Widget("pdfcatalog_productdetail_bundleditems_before")

			if (bundleTitleText.HasValue())
			{
				<h3>@bundleTitleText</h3>
			}
			foreach (var bundleItem in bundleItems)
			{
                <div class="additional-products text-small">
					@if (bundleItem.PictureUrl.HasValue())
					{
						<div class="picture">
							<img src="@bundleItem.PictureUrl" />
						</div>
					}
                    <div>
                        @bundleItem.Name
						@if (bundleItem.Quantity > 1)
						{
							<text>
								&#215;&nbsp;@bundleItem.Quantity
							</text>
						}
						@if (bundleItem.ShortSummary.HasValue())
						{
							<br />@bundleItem.ShortSummary
						}
                    </div>
                </div>
            }
            <div class="clearfix"></div>
        }

		@if (groupedProducts != null && groupedProducts.Count > 0)
		{
			@Html.Widget("pdfcatalog_productdetail_associatedproducts_before")

			<h3>@resAssociatedProducts</h3>
			foreach (var groupedProduct in groupedProducts)
			{
				<div class="additional-products text-small">
					@if (groupedProduct.PictureUrl.HasValue())
					{
						<div class="picture">
							<img src="@groupedProduct.PictureUrl" />
						</div>
					}
					<div>
						@groupedProduct.Name
						@if (groupedProduct.ShortSummary.HasValue())
						{
							<br />@groupedProduct.ShortSummary
						}
					</div>
				</div>
			}
			<div class="clearfix"></div>
		}
    </div>
}