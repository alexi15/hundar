@{
    Layout = "";
    Html.AddCssFileParts(true, "~/Plugins/SmartStore.TrustedShops/Content/trustedshops.css");
}
@model SmartStore.TrustedShops.Models.TsCustomerReviewsConfigurationModel
@using SmartStore.Web.Framework;

<div class="ts-info">
    <img src="@Url.Content(T("Plugins.SmartStore.TrustedShops.Image.Logo"))" class="pull-right" />
    <div class="intro">
        @Html.Raw(T("Plugins.SmartStore.TrustedShops.Introduction.Headline"))
    </div>
    <div class="clearfix">
        <div class="pull-left">
            <img src="@Url.Content(T("Plugins.SmartStore.TrustedShops.Image.Seal"))" />
            <div class="prepared">
                <span>@Html.Raw(T("Plugins.SmartStore.TrustedShops.Prepared"))</span>
            </div>
        </div>
        @Html.Raw(T("Plugins.SmartStore.TrustedShops.Introduction.Body"))
    </div>
</div>

<div class="alert alert-info">
    @Html.Raw(T("Plugins.Widgets.TrustedShopsCustomerReviews.AdminInstruction"))
</div>
	
@Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })

@Html.ValidationSummary(false)

@using (Html.BeginForm())
{    
<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ZoneId)
        </td>
        <td class="adminData">
            @Html.SettingOverrideCheckbox(model => model.ZoneId)
            @Html.DropDownListFor(model => model.ZoneId, Model.AvailableZones)
            @Html.ValidationMessageFor(model => model.ZoneId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.TrustedShopsId)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.TrustedShopsId)
            @Html.ValidationMessageFor(model => model.TrustedShopsId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.IsTestMode)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.IsTestMode)
            @Html.ValidationMessageFor(model => model.IsTestMode)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.TrustedShopsActivation)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.TrustedShopsActivation)
            @Html.ValidationMessageFor(model => model.TrustedShopsActivation)
        </td>
    </tr>

    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ShopName)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.ShopName)
            @Html.ValidationMessageFor(model => model.ShopName)
        </td>
    </tr>

    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.DisplayWidget)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.DisplayWidget)
            @Html.ValidationMessageFor(model => model.DisplayWidget)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.DisplayReviewLinkOnOrderCompleted)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.DisplayReviewLinkOnOrderCompleted)
            @Html.ValidationMessageFor(model => model.DisplayReviewLinkOnOrderCompleted)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.DisplayReviewLinkInEmail)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.DisplayReviewLinkInEmail)
            @Html.ValidationMessageFor(model => model.DisplayReviewLinkInEmail)
        </td>
    </tr>
    <tr>
		<td class="adminTitle">
			&nbsp;
		</td>
		<td class="adminData">
            <button type="submit" name="save" value="save" class="btn btn-primary">
                <i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")
            </button>
        </td>
    </tr>
</table>
}